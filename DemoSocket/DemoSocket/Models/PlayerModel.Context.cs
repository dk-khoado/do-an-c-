//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemoSocket.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DatabaseGameBaiEntities : DbContext
    {
        public DatabaseGameBaiEntities()
            : base("name=DatabaseGameBaiEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<player> players { get; set; }
        public virtual DbSet<room_list> room_list { get; set; }
    
        public virtual int chuyenTien(Nullable<decimal> money, Nullable<int> id_send, Nullable<int> id_receive)
        {
            var moneyParameter = money.HasValue ?
                new ObjectParameter("money", money) :
                new ObjectParameter("money", typeof(decimal));
    
            var id_sendParameter = id_send.HasValue ?
                new ObjectParameter("id_send", id_send) :
                new ObjectParameter("id_send", typeof(int));
    
            var id_receiveParameter = id_receive.HasValue ?
                new ObjectParameter("id_receive", id_receive) :
                new ObjectParameter("id_receive", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("chuyenTien", moneyParameter, id_sendParameter, id_receiveParameter);
        }
    
        public virtual int congTien(Nullable<decimal> amount, Nullable<int> id)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("congTien", amountParameter, idParameter);
        }
    
        public virtual ObjectResult<LoadChatBox_Result> LoadChatBox(Nullable<int> playerID)
        {
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("playerID", playerID) :
                new ObjectParameter("playerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadChatBox_Result>("LoadChatBox", playerIDParameter);
        }
    
        public virtual int sendmessage(Nullable<int> playerIDsend, Nullable<int> playerIDrecive, string message)
        {
            var playerIDsendParameter = playerIDsend.HasValue ?
                new ObjectParameter("playerIDsend", playerIDsend) :
                new ObjectParameter("playerIDsend", typeof(int));
    
            var playerIDreciveParameter = playerIDrecive.HasValue ?
                new ObjectParameter("playerIDrecive", playerIDrecive) :
                new ObjectParameter("playerIDrecive", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sendmessage", playerIDsendParameter, playerIDreciveParameter, messageParameter);
        }
    
        public virtual int truTien(Nullable<decimal> amount, Nullable<int> id)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("truTien", amountParameter, idParameter);
        }
    }
}
