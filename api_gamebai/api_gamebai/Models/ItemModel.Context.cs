//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace api_gamebai.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DatabaseGameBai_Item : DbContext
    {
        public DatabaseGameBai_Item()
            : base("name=DatabaseGameBai_Item")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<player_inventory> player_inventory { get; set; }
        public virtual DbSet<shop_game> shop_game { get; set; }
    
        public virtual int AddToShop(string name_item, Nullable<decimal> cost, Nullable<bool> isEnable, string type_item, Nullable<int> duration, string descript)
        {
            var name_itemParameter = name_item != null ?
                new ObjectParameter("name_item", name_item) :
                new ObjectParameter("name_item", typeof(string));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("cost", cost) :
                new ObjectParameter("cost", typeof(decimal));
    
            var isEnableParameter = isEnable.HasValue ?
                new ObjectParameter("isEnable", isEnable) :
                new ObjectParameter("isEnable", typeof(bool));
    
            var type_itemParameter = type_item != null ?
                new ObjectParameter("type_item", type_item) :
                new ObjectParameter("type_item", typeof(string));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(int));
    
            var descriptParameter = descript != null ?
                new ObjectParameter("descript", descript) :
                new ObjectParameter("descript", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddToShop", name_itemParameter, costParameter, isEnableParameter, type_itemParameter, durationParameter, descriptParameter);
        }
    
        public virtual int BuyInventory(Nullable<int> id_player, Nullable<int> id_item)
        {
            var id_playerParameter = id_player.HasValue ?
                new ObjectParameter("id_player", id_player) :
                new ObjectParameter("id_player", typeof(int));
    
            var id_itemParameter = id_item.HasValue ?
                new ObjectParameter("id_item", id_item) :
                new ObjectParameter("id_item", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BuyInventory", id_playerParameter, id_itemParameter);
        }
    
        public virtual int Renewal(Nullable<int> id_player, Nullable<int> id_item)
        {
            var id_playerParameter = id_player.HasValue ?
                new ObjectParameter("id_player", id_player) :
                new ObjectParameter("id_player", typeof(int));
    
            var id_itemParameter = id_item.HasValue ?
                new ObjectParameter("id_item", id_item) :
                new ObjectParameter("id_item", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Renewal", id_playerParameter, id_itemParameter);
        }
    
        public virtual int SellSkin(Nullable<int> player_id, Nullable<int> item_id)
        {
            var player_idParameter = player_id.HasValue ?
                new ObjectParameter("player_id", player_id) :
                new ObjectParameter("player_id", typeof(int));
    
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("item_id", item_id) :
                new ObjectParameter("item_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SellSkin", player_idParameter, item_idParameter);
        }
    }
}
