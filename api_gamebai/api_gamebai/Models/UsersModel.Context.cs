//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace api_gamebai.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Databasegamebai : DbContext
    {
        public Databasegamebai()
            : base("name=Databasegamebai")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<history_login> history_login { get; set; }
        public virtual DbSet<player> players { get; set; }
        public virtual DbSet<player_chatlist> player_chatlist { get; set; }
        public virtual DbSet<player_listfriend> player_listfriend { get; set; }
        public virtual DbSet<player_rank> player_rank { get; set; }
        public virtual DbSet<room_list> room_list { get; set; }
        public virtual DbSet<player_message> player_message { get; set; }
        public virtual DbSet<player_status> player_status { get; set; }
        public virtual DbSet<room_listplayer> room_listplayer { get; set; }
        public virtual DbSet<infoplayer> infoplayers { get; set; }
        public virtual DbSet<vChat> vChats { get; set; }
        public virtual DbSet<vroom_listplayer> vroom_listplayer { get; set; }
    
        public virtual int congTien(Nullable<decimal> amount, Nullable<int> id)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("congTien", amountParameter, idParameter);
        }
    
        public virtual int sendmessage(Nullable<int> playerIDsend, Nullable<int> playerIDrecive, string message)
        {
            var playerIDsendParameter = playerIDsend.HasValue ?
                new ObjectParameter("playerIDsend", playerIDsend) :
                new ObjectParameter("playerIDsend", typeof(int));
    
            var playerIDreciveParameter = playerIDrecive.HasValue ?
                new ObjectParameter("playerIDrecive", playerIDrecive) :
                new ObjectParameter("playerIDrecive", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sendmessage", playerIDsendParameter, playerIDreciveParameter, messageParameter);
        }
    }
}
